spring.application.name=users-manager

#server.port=8090

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.kafka.topic.name=account_fallback_topic
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.use.type.headers=false
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.consumer.group-id=user-manager
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false


services.account-manager.base-url=${ACCOUNT_MANAGER_BASE_URL:http://localhost:8091/accounts}

resilience4j.circuitbreaker.instances.accountServiceClient.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.accountServiceClient.slidingWindowSize=10
resilience4j.circuitbreaker.instances.accountServiceClient.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.accountServiceClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.accountServiceClient.waitDurationInOpenState=30s

management.endpoints.web.exposure.include=health,info,circuitbreakers
management.endpoint.health.show-details=always
management.endpoints.enabled-by-default=true

